version: "3.9"

networks:
  voting:

services:
  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - voting

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=voting_system
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    networks:
      - voting

  api01: &api
    build:
      context: .
      dockerfile: dockerfile.api
    environment:
      - PORT=8080
      - DATABASE_HOST="db"
      - DATABASE_PORT=5432
      - DATABASE_USER="admin"
      - DATABASE_PASS="admin"
      - DATABASE_DBNAME="voting_system"
      - BROKER_URL="amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - db
    networks:
      - voting

  api02:
    <<: *api
    hostname: api02

  consumer01: &consumer
    build:
      context: .
      dockerfile: dockerfile.consumer
    hostname: consumer01
    environment:
      - PORT=8080
      - DATABASE_HOST="db"
      - DATABASE_PORT=5432
      - DATABASE_USER="admin"
      - DATABASE_PASS="admin"
      - DATABASE_DBNAME="voting_system"
      - BROKER_URL="amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - db
      - rabbitmq
    networks:
      - voting

  nginx:
    image: nginx:latest
    volumes:
      - ./.config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    networks:
      - voting
